'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shallowWithUntil = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = until;

var _enzyme = require('enzyme');

// Copied from gist
// https://gist.github.com/matthieuprat/5fd37abbd4a4002e6cfe0c73ae54cda8
function until(selector) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.options;

  if (this.isEmptyRender() || typeof this.node.type === 'string') {
    return this;
  }

  var context = options.context;

  var instance = this.instance();
  if (instance.getChildContext) {
    context = _extends({}, context, instance.getChildContext());
  }

  var wrapper = this.shallow({ context: context });

  if (!this.is(selector)) {
    return until.call(wrapper, selector, { context: context });
  }

  return wrapper;
}

var shallowWithUntil = exports.shallowWithUntil = function shallowWithUntil() {
  var wrapper = _enzyme.shallow.apply(undefined, arguments);
  return Object.assign(wrapper, { until: until });
};